name: Build App GCP

on:
  push:
    branches:
      - main

env:
  GKE_CLUSTER: simm-prd
  GKE_ZONE: southamerica-east1-a
  DEPLOYMENT_NAME: simm-teste-deployment
  IMAGE: simm-teste
  TAG: main
  NAMESPACE: simm
  PROJECT_NAME: ${{ secrets.GKE_PROJECT }}

jobs:
  build:
    name: Build, push, and deploy
    runs-on: ubuntu-latest
    env:
      VAR_1: teste
    steps:
      - name: Checkout staging
        uses: actions/checkout@v2

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      #- name: Setup gcloud CLI
      #  uses: google-github-actions/setup-gcloud@v0
      #  with:
      #    service_account_key: ${{ secrets.GKE_SA_KEY }}
      #    project_id: ${{ secrets.GKE_PROJECT }}

      - name: Configure Docker to use the gcloud command-line tool as a credential
        run: gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Build container image
        run: docker build -t gcr.io/$PROJECT_NAME/$IMAGE:$GITHUB_SHA .
        #run: |-
        #  docker build \
        #    --tag "gcr.io/$PROJECT_NAME/$IMAGE:$GITHUB_SHA" \
        #    --build-arg GITHUB_SHA="$GITHUB_SHA" \
        #    --build-arg GITHUB_REF="$GITHUB_REF" \

      - name: Push image to Google Container Registry
        #run: docker push gcr.io/$PROJECT_NAME/$IMAGE:$TAG
        run: |-
          docker push gcr.io/$PROJECT_NAME/$IMAGE:$GITHUB_SHA        

      - name: Get the GKE credentials so we can deploy to the cluster
        run: gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      - name: Delete deployment
        run: kubectl delete deployment.apps/$DEPLOYMENT_NAME -n $NAMESPACE --ignore-not-found

      - name: Deploy to Google Kubernetes Engine
        #run: kubectl apply -f $GITHUB_WORKSPACE/k8s/prd
        run: |-
          cd $GITHUB_WORKSPACE/k8s/prd
          ../../kustomize edit set image gcr.io/simm/simm-teste=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
          ../../kustomize build . | kubectl apply -f -

      - name: Verify deployment
        run: |-
           kubectl rollout status deployment.apps/$DEPLOYMENT_NAME -n $NAMESPACE
           kubectl get services -o wide

      #- name: Microsoft Teams Notification
      #  uses: skitionek/notify-microsoft-teams@master
      #  if: always()
      #  with:
      #    webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
      #    needs: ${{ toJson(needs) }}
      #    job: ${{ toJson(job) }}
      #    steps: ${{ toJson(steps) }}
